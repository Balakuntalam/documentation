name: Maven Package upon a push

# Triggered when code is pushed to any branch in a repository
on: push



#on:
#  schedule:
#    # * is a special character in YAML so you have to quote this string
#    - cron:  '30 5 * * *'
  
jobs:
  Generate_Documentation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        names: [audit-manager]

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup the settings file for ossrh server
        run: echo "<settings> <servers>  <server>  <id>ossrh</id>    <username>${{secrets.ossrh_user}}</username> <password>${{secrets.ossrh_secret}}</password> </server> </servers> <profiles> <profile>     <id>ossrh</id> <activation> <activeByDefault>true</activeByDefault> </activation>  <properties> <gpg.executable>gpg2</gpg.executable> <gpg.passphrase>${{secrets.gpg_secret}}</gpg.passphrase> </properties> </profile> <profile> <id>allow-snapshots</id>       <activation><activeByDefault>true</activeByDefault></activation> <repositories> <repository>        <id>snapshots-repo</id> <url>https://oss.sonatype.org/content/repositories/snapshots</url> <releases><enabled>false</enabled></releases> <snapshots><enabled>true</enabled></snapshots> </repository>  <repository>         <id>releases-repo</id>  <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>         <releases><enabled>false</enabled></releases>         <snapshots><enabled>false</enabled></snapshots> </repository> </repositories>  </profile> <profile> <id>sonar</id> <properties>  <sonar.sources>.</sonar.sources> <sonar.host.url>https://sonarcloud.io</sonar.host.url>  </properties> <activation> <activeByDefault>false</activeByDefault> </activation> </profile> </profiles> </settings>" > $GITHUB_WORKSPACE/settings.xml

      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          repository: mosip/${{ matrix.names }}
          path: ${{ matrix.names }}
          ref: develop
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup branch and env
        run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=develop" >> $GITHUB_ENV

      - name: Build with Maven
        run: |
               npm install -g redoc-cli
               find * -name pom.xml -mindepth 3 -maxdepth 5 -execdir mvn -B -Dgpg.skip -DskipTests -Dgpg.skip clean verify -s $GITHUB_WORKSPACE/settings.xml -P openapi-doc-generate-profile \;
#               find . -name *-openapi.json -exec basename {} \;redoc-cli bundle -o $(find .. -name "*-openapi.json" -exec readlink -f {} \;) ./target/openapi.json
#               cd ./audit-manager/kernel/kernel-auditmanager-service
#               mvn -B -Dgpg.skip -DskipTests -Dgpg.skip clean verify --file pom.xml -s $GITHUB_WORKSPACE/settings.xml -P openapi-doc-generate-profile
#               npm install -g redoc-cli
#               redoc-cli bundle -o ./target/audit-service.html ./target/openapi.json

      - name: create array of files
        id: create_list
        run: |
          array=()
          for i in "$(find . -name "openapi.json" -exec readlink -f {} \;)"
          do
            array+=$i
          done
          echo "::set-output name=array::${array[@]}"

      - name: display array
        run: |
          echo "The array is: ${{ steps.create_list.outputs.array[@] }}"


#      - name: Upload Report Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: audit-manager
#          path: ./audit-manager/kernel/kernel-auditmanager-service/target/audit-service.html
#          retention-days: 1
#
#      #upload report
#      - name: Upload report to confluence
#        run: 'curl  args: -u ''${{secrets.reporting_user}}:${{secrets.reporting_user_secret}}'' --request POST -F file=@./audit-manager/kernel/kernel-auditmanager-service/target/audit-service.html -H ''Accept: application/json'' -H ''X-Atlassian-Token: no-check'' --url https://mosip.atlassian.net/wiki/rest/api/content/45285493/child/attachment'
#
#  Upload_to_Documentation:
#    needs: Generate_Documentation
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Checkout repo
#        uses: actions/checkout@v2
#        with:
#          ref: gh-pages
#
#      - name: Download Report Artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: audit-manager
#          path: ./1.2.0/
#
#      - name: Commit changes
#        uses: EndBug/add-and-commit@v7
#        with:
#          default_author: github_actions
#          message: 'added documentation audit manager'
#          add: './1.2.0/audit-service.html'
