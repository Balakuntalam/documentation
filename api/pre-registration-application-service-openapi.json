{
  "openapi": "3.0.1",
  "info": {
    "title": "Pre-Registration",
    "description": "Pre-Registration Application Service",
    "license": {
      "name": "Mosip",
      "url": "https://docs.mosip.io/platform/license"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:9090/preregistration/v1",
      "description": "Pre-Registration Application Service"
    }
  ],
  "tags": [
    {
      "name": "application-controller",
      "description": "Application Controller"
    },
    {
      "name": "generate-q-rcode-controller",
      "description": "Generate Q Rcode Controller"
    },
    {
      "name": "lost-uin-controller",
      "description": "Lost UIN Controller"
    },
    {
      "name": "update-registration-controller",
      "description": "Update Registration Controller"
    },
    {
      "name": "document-controller",
      "description": "Document Controller"
    },
    {
      "name": "demographic-controller",
      "description": "Demographic Controller"
    },
    {
      "name": "Transliteration Controller",
      "description": "Transliteration Controller"
    },
    {
      "name": "notification-controller",
      "description": "Notification Controller"
    },
    {
      "name": "login-controller",
      "description": "Login Controller"
    },
    {
      "name": "UISpecification Controller",
      "description": "UI Specification Controller"
    },
    {
      "name": "appointment-controller",
      "description": "Appointment Controller"
    },
    {
      "name": "proxy-masterdata-controller",
      "description": "Proxy Masterdata Controller"
    }
  ],
  "paths": {
    "/uispec/latest": {
      "get": {
        "tags": [
          "UISpecification Controller"
        ],
        "summary": "Service to fetch latest published ui specification",
        "description": "Service to fetch latest published ui specification",
        "operationId": "getLatestPublishedSchema",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0
            }
          },
          {
            "name": "identitySchemaVersion",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOUISpecMetaDataDTO"
                }
              }
            }
          }
        }
      }
    },
    "/uispec/all": {
      "get": {
        "tags": [
          "UISpecification Controller"
        ],
        "summary": "Service to fetch all published ui specification",
        "description": "Service to fetch all published ui specification",
        "operationId": "getAllPublishedSchema",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOPageDTOUISpecMetaDataDTO"
                }
              }
            }
          }
        }
      }
    },
    "/transliteration/transliterate": {
      "post": {
        "tags": [
          "Transliteration Controller"
        ],
        "summary": "Get Pre-Registartion-Translitration data",
        "description": "Get Pre-Registartion-Translitration data",
        "operationId": "translitrator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOTransliterationRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Given key is translitrated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOTransliterationResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/qrCode/generate": {
      "post": {
        "tags": [
          "generate-q-rcode-controller"
        ],
        "summary": "Generate QR Code",
        "description": "Generate QR Code",
        "operationId": "generateQRCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOString"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOQRCodeResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/proxy/**": {
      "get": {
        "tags": [
          "proxy-masterdata-controller"
        ],
        "summary": "Master data proxy",
        "description": "Master data proxy",
        "operationId": "masterDataProxyController",
        "parameters": [
          {
            "name": "body",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "proxy-masterdata-controller"
        ],
        "summary": "Master data proxy",
        "description": "Master data proxy",
        "operationId": "masterDataProxyController_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/notification": {
      "post": {
        "tags": [
          "notification-controller"
        ],
        "summary": "sendNotifications",
        "description": "Trigger notification",
        "operationId": "sendNotifications",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "NotificationRequestDTO"
                ],
                "type": "object",
                "properties": {
                  "NotificationRequestDTO": {
                    "type": "string"
                  },
                  "langCode": {
                    "type": "string"
                  },
                  "attachment": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTONotificationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/notification/notify": {
      "post": {
        "tags": [
          "notification-controller"
        ],
        "summary": "sendNotification",
        "description": "Trigger notification",
        "operationId": "sendNotification",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "NotificationRequestDTO",
                  "langCode"
                ],
                "type": "object",
                "properties": {
                  "NotificationRequestDTO": {
                    "type": "string"
                  },
                  "langCode": {
                    "type": "string"
                  },
                  "attachment": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTONotificationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/login/validateOtp": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "summary": "validateWithUserIdOtp",
        "description": "Validate UserId and Otp",
        "operationId": "validateWithUserIdOtp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOAuthNResponse"
                }
              }
            }
          }
        }
      }
    },
    "/login/sendOtp": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "summary": "sendOTP",
        "description": "Send Otp to UserId",
        "operationId": "sendOTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOOtpRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOAuthNResponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/login/sendOtpWithCaptcha": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "summary": "sendOtpWithCaptcha",
        "description": "sendOtpWithCaptcha",
        "operationId": "sendOtpWithCaptcha",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOOTPRequestWithLangCodeAndCaptchaToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/login/sendOtp/langcode": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "summary": "sendOTPWithLangCode",
        "description": "Send Otp to UserId",
        "operationId": "sendOTPWithLangCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOOTPWithLangCodeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOAuthNResponse"
                }
              }
            }
          }
        }
      }
    },
    "/login/refreshconfig": {
      "get": {
        "tags": [
          "login-controller"
        ],
        "summary": "refreshConfigParams",
        "description": "Refresh global and Pre-Registration config data",
        "operationId": "refreshConfigParams",
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "global and Pre-Registration config data successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/login/invalidateToken": {
      "post": {
        "tags": [
          "login-controller"
        ],
        "summary": "invalidateToken",
        "description": "Invalidate the token",
        "operationId": "invalidateToken",
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/login/config": {
      "get": {
        "tags": [
          "login-controller"
        ],
        "summary": "configParams",
        "description": "Get global and Pre-Registration config data",
        "operationId": "configParams",
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "global and Pre-Registration config data successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOMapStringString"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logAudit": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "logAugit",
        "description": "log audit events from ui",
        "operationId": "logAugit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOUIAuditRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOString"
                }
              }
            }
          }
        }
      }
    },
    "/internal/notification": {
      "post": {
        "tags": [
          "notification-controller"
        ],
        "summary": "sendNotificationsInternal",
        "description": "Trigger notification by internal batch job",
        "operationId": "sendNotificationsInternal",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "NotificationRequestDTO"
                ],
                "type": "object",
                "properties": {
                  "NotificationRequestDTO": {
                    "type": "string"
                  },
                  "langCode": {
                    "type": "string"
                  },
                  "attachment": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTONotificationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/internal/applications/appointment/{preRegistrationId}": {
      "put": {
        "tags": [
          "appointment-controller"
        ],
        "summary": "Cancel an booked appointment. Used internally by batch job",
        "description": "Cancel an booked appointment. Used internally by batch job,",
        "operationId": "internalCancelBook",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "Appointment cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOCancelBookingResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/documents/{preRegistrationId}": {
      "put": {
        "tags": [
          "document-controller"
        ],
        "summary": "copyDocument",
        "description": "Copy uploaded document",
        "operationId": "copyDocument",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourcePreId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Document successfully copied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODocumentResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "document-controller"
        ],
        "summary": "fileUpload",
        "description": "Document Upload",
        "operationId": "fileUpload",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Document request",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "Document request": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "Document uploaded successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODocumentResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/documents/{documentId}": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "getDocumentforDocId",
        "description": "Get All Document for Document Id",
        "operationId": "getDocumentforDocId",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preRegistrationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Documents reterived successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODocumentDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "document-controller"
        ],
        "summary": "deleteDocument",
        "description": "Delete document by document Id",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preRegistrationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Document successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODocumentDeleteResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/documents/preregistration/{preRegistrationId}": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "getDocumentforDocId",
        "description": "Get All Document for Pre-Registration Id",
        "operationId": "getAllDocumentforPreid",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Documents reterived successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODocumentsMetaData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "document-controller"
        ],
        "summary": "deleteAllByPreId",
        "description": "Delete all documents by pre-registration Id",
        "operationId": "deleteAllByPreId",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Documents successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODocumentDeleteResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/documents/document/{documentId}": {
      "put": {
        "tags": [
          "document-controller"
        ],
        "summary": "updateDocRefId",
        "description": "update document reference Id",
        "operationId": "updateDocRefId",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preRegistrationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Document Reference Id successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOString"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getAllApplications",
        "description": "Fetch all applications for current user",
        "operationId": "getAllApplications",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOApplicationsListDTO"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplication",
        "description": "Fetch application details for applicationId",
        "operationId": "getApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOApplicationEntity"
                }
              }
            }
          }
        }
      }
    },
    "/applications/updateregistration": {
      "post": {
        "tags": [
          "update-registration-controller"
        ],
        "summary": "addUpdateRegistration",
        "description": "Creates a new application with Booking Type as UPDATE_REGISTRATION",
        "operationId": "addUpdateRegistration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOApplicationRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "New Application with booking type as UPDATE_REGISTRATION successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOApplicationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/applications/updateregistration/{applicationId}": {
      "delete": {
        "tags": [
          "update-registration-controller"
        ],
        "summary": "deleteUpdateRegistration",
        "description": "Delete application with booking type UPDATE_REGISTRATION.",
        "operationId": "deleteUpdateRegistration",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODeleteApplicationDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Deletion of application is successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODeleteApplicationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/applications/status/{applicationId}": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationStatus",
        "description": "Fetch the status of a application",
        "operationId": "getApplicationStatus",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "All applications status fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOString"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/applications/prereg": {
      "get": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "getAllPreRegApplications",
        "description": "Fetch all the prereg applications created by user",
        "operationId": "getAllPreRegApplications",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "All applications fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODemographicMetadataDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "addPreRegDemographicData",
        "description": "Add demographic data for a new preregistration application",
        "operationId": "addPreRegDemographicData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTODemographicRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "Pre-Registration successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODemographicCreateResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/applications/prereg/{preRegistrationId}": {
      "get": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "getPreRegDemographicData",
        "description": "Get demographic data for a new preregistration application",
        "operationId": "getPreRegDemographicData",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Demographic data successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODemographicResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "updatePreRegDemographicData",
        "description": "Update demographic data for a new preregistration application",
        "operationId": "updatePreRegDemographicData",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTODemographicRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Demographic data successfully Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODemographicUpdateResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "deletePreRegApplication",
        "description": "Discard prereg application",
        "operationId": "deletePreRegApplication",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODeletePreRegistartionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Deletion of individual is successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODeletePreRegistartionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/applications/prereg/updatedTime": {
      "post": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "getUpdatedDateTimeByPreIds",
        "description": "Get Updated Date Time for List of Pre-Registration Id",
        "operationId": "getUpdatedDateTimeByPreIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOPreRegIdsByRegCenterIdDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "Updated Date Time successfully fetched for list of pre-registration ids",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOMapStringString"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/applications/prereg/status/{preRegistrationId}": {
      "get": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "getPreRegApplicationStatus",
        "description": "Fetch the status of a application",
        "operationId": "getPreRegApplicationStatus",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "All applications status fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOPreRegistartionStatusDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "updatePreRegApplicationStatus",
        "description": "Update Pre-Registartion status",
        "operationId": "updatePreRegApplicationStatus",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "Pre-Registration Status successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOString"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/applications/prereg/info/{preregistrationId}": {
      "get": {
        "tags": [
          "demographic-controller"
        ],
        "summary": "getPreRegDemographicAndDocumentData",
        "description": "Retrive Application demographic and document info for given prid",
        "operationId": "getPreRegDemographicAndDocumentData",
        "parameters": [
          {
            "name": "preregistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOObject"
                }
              }
            }
          }
        }
      }
    },
    "/applications/lostuin": {
      "post": {
        "tags": [
          "lost-uin-controller"
        ],
        "summary": "addLostUinApplication",
        "description": "Creates a new application with Booking Type as LOST_FORGOTTEN_UIN",
        "operationId": "addLostUinApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOApplicationRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "New application with booking type as LOST_FORGOTTEN_UIN successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOApplicationResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/applications/lostuin/{applicationId}": {
      "delete": {
        "tags": [
          "lost-uin-controller"
        ],
        "summary": "deleteLostUinApplication",
        "description": "Delete application with booking type LOST_FORGOTTEN_UIN.",
        "operationId": "deleteLostUinApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODeleteApplicationDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Deletion of application is successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODeleteApplicationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/applications/bookings/{regCenterId}": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getBookingsForRegCenter",
        "description": "Fetch all bookings for regCenterId on the given appointmentDate",
        "operationId": "getBookingsForRegCenter",
        "parameters": [
          {
            "name": "regCenterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appointmentDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOListApplicationDetailResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/applications/appointment": {
      "post": {
        "tags": [
          "appointment-controller"
        ],
        "summary": "Booking Appointment",
        "description": "Booking Appointment",
        "operationId": "bookMultiAppoinment",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOMultiBookingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Appointment Booked Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOBookingStatus"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "appointment-controller"
        ],
        "summary": "Discard Booking",
        "description": "CDiscard Booking",
        "operationId": "discardIndividual",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODeleteBookingDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Deletion of Booking is successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTODeleteBookingDTO"
                }
              }
            }
          }
        }
      }
    },
    "/applications/appointment/{preRegistrationId}": {
      "get": {
        "tags": [
          "appointment-controller"
        ],
        "summary": "Fetch Appointment details",
        "description": "Fetch Appointment details",
        "operationId": "getAppointments",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment details fetched Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOBookingRegistrationDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "appointment-controller"
        ],
        "summary": "Cancel an booked appointment",
        "description": "Cancel an booked appointment",
        "operationId": "cancelBook",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "Appointment cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOCancelBookingResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "appointment-controller"
        ],
        "summary": "Booking Appointment",
        "description": "Booking Appointment",
        "operationId": "bookAppoinment",
        "parameters": [
          {
            "name": "preRegistrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainRequestDTOBookingRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Appointment Booked Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOBookingStatusDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/applications/appointment/slots/availability/{registrationCenterId}": {
      "get": {
        "tags": [
          "appointment-controller"
        ],
        "summary": "Fetch availability Data",
        "description": "Fetch availability Data",
        "operationId": "getAvailability",
        "parameters": [
          {
            "name": "registrationCenterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Availablity details fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainResponseDTOAvailabilityDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ExceptionJSONInfoDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "MainResponseDTOUISpecMetaDataDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/UISpecMetaDataDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "UISpecMetaDataDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "number",
            "format": "double"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "identitySchemaId": {
            "type": "string"
          },
          "idSchemaVersion": {
            "type": "number",
            "format": "double"
          },
          "jsonSpec": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "status": {
            "type": "string"
          },
          "effectiveFrom": {
            "type": "string",
            "format": "date-time"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MainResponseDTOPageDTOUISpecMetaDataDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/PageDTOUISpecMetaDataDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "PageDTOUISpecMetaDataDTO": {
        "type": "object",
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UISpecMetaDataDTO"
            }
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "MainRequestDTOTransliterationRequestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/TransliterationRequestDTO"
          }
        }
      },
      "TransliterationRequestDTO": {
        "type": "object",
        "properties": {
          "from_field_value": {
            "type": "string"
          },
          "from_field_lang": {
            "type": "string"
          },
          "to_field_lang": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOTransliterationResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/TransliterationResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "TransliterationResponseDTO": {
        "type": "object",
        "properties": {
          "from_field_value": {
            "type": "string"
          },
          "from_field_lang": {
            "type": "string"
          },
          "to_field_value": {
            "type": "string"
          },
          "to_field_lang": {
            "type": "string"
          }
        }
      },
      "MainRequestDTOString": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOQRCodeResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/QRCodeResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "QRCodeResponseDTO": {
        "type": "object",
        "properties": {
          "qrcode": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "MainResponseDTONotificationResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/NotificationResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "NotificationResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MainRequestDTOUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "otp": {
            "type": "string"
          }
        }
      },
      "AuthNResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOAuthNResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/AuthNResponse"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "MainRequestDTOOtpRequestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/OtpRequestDTO"
          }
        }
      },
      "OtpRequestDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          }
        }
      },
      "MainRequestDTOOTPRequestWithLangCodeAndCaptchaToken": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/OTPRequestWithLangCodeAndCaptchaToken"
          }
        }
      },
      "OTPRequestWithLangCodeAndCaptchaToken": {
        "required": [
          "langCode",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          },
          "captchaToken": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "type": "object"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "MainRequestDTOOTPWithLangCodeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/OTPWithLangCodeDTO"
          }
        }
      },
      "OTPWithLangCodeDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOString": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "MainResponseDTOMapStringString": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "MainRequestDTOUIAuditRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/UIAuditRequest"
          }
        }
      },
      "UIAuditRequest": {
        "required": [
          "actionTimeStamp",
          "actionUserId",
          "description",
          "eventName",
          "moduleId",
          "moduleName"
        ],
        "type": "object",
        "properties": {
          "eventName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "actionTimeStamp": {
            "type": "string"
          },
          "actionUserId": {
            "type": "string"
          },
          "moduleName": {
            "type": "string"
          },
          "moduleId": {
            "type": "string"
          }
        }
      },
      "CancelBookingResponseDTO": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOCancelBookingResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/CancelBookingResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DocumentResponseDTO": {
        "type": "object",
        "properties": {
          "preRegistrationId": {
            "type": "string"
          },
          "docId": {
            "type": "string"
          },
          "docName": {
            "type": "string"
          },
          "refNumber": {
            "type": "string"
          },
          "docCatCode": {
            "type": "string"
          },
          "docTypCode": {
            "type": "string"
          },
          "docFileFormat": {
            "type": "string"
          }
        }
      },
      "MainResponseDTODocumentResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DocumentResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DocumentDTO": {
        "type": "object",
        "properties": {
          "document": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "MainResponseDTODocumentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DocumentDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DocumentDeleteResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MainResponseDTODocumentDeleteResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DocumentDeleteResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DocumentMultipartResponseDTO": {
        "type": "object",
        "properties": {
          "docName": {
            "type": "string"
          },
          "documentId": {
            "type": "string"
          },
          "docCatCode": {
            "type": "string"
          },
          "docTypCode": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          },
          "refNumber": {
            "type": "string"
          }
        }
      },
      "DocumentsMetaData": {
        "type": "object",
        "properties": {
          "documentsMetaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentMultipartResponseDTO"
            }
          }
        }
      },
      "MainResponseDTODocumentsMetaData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DocumentsMetaData"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "ApplicationEntity": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "bookingType": {
            "type": "string"
          },
          "bookingStatusCode": {
            "type": "string"
          },
          "applicationStatusCode": {
            "type": "string"
          },
          "appointmentDate": {
            "type": "string",
            "format": "date"
          },
          "bookingDate": {
            "type": "string",
            "format": "date"
          },
          "registrationCenterId": {
            "type": "string"
          },
          "slotFromTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "slotToTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "contactInfo": {
            "type": "string"
          },
          "crBy": {
            "type": "string"
          },
          "crDtime": {
            "type": "string",
            "format": "date-time"
          },
          "updBy": {
            "type": "string"
          },
          "updDtime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApplicationsListDTO": {
        "type": "object",
        "properties": {
          "allApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationEntity"
            }
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MainResponseDTOApplicationsListDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/ApplicationsListDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "MainResponseDTOApplicationEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/ApplicationEntity"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "ApplicationRequestDTO": {
        "type": "object",
        "properties": {
          "langCode": {
            "type": "string"
          }
        }
      },
      "MainRequestDTOApplicationRequestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/ApplicationRequestDTO"
          }
        }
      },
      "ApplicationResponseDTO": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDateTime": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDateTime": {
            "type": "string"
          },
          "applicationStatusCode": {
            "type": "string"
          },
          "bookingStatusCode": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          },
          "bookingType": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOApplicationResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/ApplicationResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DeleteApplicationDTO": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "deletedBy": {
            "type": "string"
          },
          "deletedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "preRegistrationId": {
            "type": "string",
            "writeOnly": true
          }
        }
      },
      "MainResponseDTODeleteApplicationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DeleteApplicationDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DemographicRequestDTO": {
        "type": "object",
        "properties": {
          "langCode": {
            "type": "string"
          },
          "demographicDetails": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "requiredFields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MainRequestDTODemographicRequestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/DemographicRequestDTO"
          }
        }
      },
      "DemographicCreateResponseDTO": {
        "type": "object",
        "properties": {
          "preRegistrationId": {
            "type": "string"
          },
          "createdDateTime": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          },
          "demographicDetails": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "MainResponseDTODemographicCreateResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DemographicCreateResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "BookingRegistrationDTO": {
        "type": "object",
        "properties": {
          "registration_center_id": {
            "type": "string"
          },
          "appointment_date": {
            "type": "string"
          },
          "time_slot_from": {
            "type": "string"
          },
          "time_slot_to": {
            "type": "string"
          }
        }
      },
      "DemographicMetadataDTO": {
        "type": "object",
        "properties": {
          "basicDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DemographicViewDTO"
            }
          },
          "totalRecords": {
            "type": "string"
          },
          "noOfRecords": {
            "type": "string"
          },
          "pageIndex": {
            "type": "string"
          }
        }
      },
      "DemographicViewDTO": {
        "type": "object",
        "properties": {
          "preRegistrationId": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "bookingMetadata": {
            "$ref": "#/components/schemas/BookingRegistrationDTO"
          },
          "demographicMetadata": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "dataCaptureLanguage": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MainResponseDTODemographicMetadataDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DemographicMetadataDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DemographicUpdateResponseDTO": {
        "type": "object",
        "properties": {
          "preRegistrationId": {
            "type": "string"
          },
          "updatedDateTime": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          },
          "demographicDetails": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "MainResponseDTODemographicUpdateResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DemographicUpdateResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DemographicResponseDTO": {
        "type": "object",
        "properties": {
          "preRegistrationId": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDateTime": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDateTime": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          },
          "demographicDetails": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "MainResponseDTODemographicResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DemographicResponseDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DeletePreRegistartionDTO": {
        "type": "object",
        "properties": {
          "preRegistrationId": {
            "type": "string"
          },
          "deletedBy": {
            "type": "string"
          },
          "deletedDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MainResponseDTODeletePreRegistartionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DeletePreRegistartionDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "MainRequestDTOPreRegIdsByRegCenterIdDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/PreRegIdsByRegCenterIdDTO"
          }
        }
      },
      "PreRegIdsByRegCenterIdDTO": {
        "type": "object",
        "properties": {
          "registartion_center_id": {
            "type": "string"
          },
          "pre_registration_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MainResponseDTOPreRegistartionStatusDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/PreRegistartionStatusDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "PreRegistartionStatusDTO": {
        "type": "object",
        "properties": {
          "preRegistartionId": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          }
        }
      },
      "ApplicationDetailResponseDTO": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "applicationStatusCode": {
            "type": "string"
          },
          "bookingStatusCode": {
            "type": "string"
          },
          "appointmentDate": {
            "type": "string"
          },
          "slotFromTime": {
            "type": "string"
          },
          "slotToTime": {
            "type": "string"
          },
          "crBy": {
            "type": "string"
          },
          "crDtime": {
            "type": "string"
          },
          "registrationCenterId": {
            "type": "string"
          },
          "bookingType": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOListApplicationDetailResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationDetailResponseDTO"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "MainRequestDTOMultiBookingRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/MultiBookingRequest"
          }
        }
      },
      "MultiBookingRequest": {
        "type": "object",
        "properties": {
          "bookingRequest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiBookingRequestDTO"
            }
          }
        }
      },
      "MultiBookingRequestDTO": {
        "type": "object",
        "properties": {
          "preRegistrationId": {
            "type": "string"
          },
          "registration_center_id": {
            "type": "string"
          },
          "appointment_date": {
            "type": "string"
          },
          "time_slot_from": {
            "type": "string"
          },
          "time_slot_to": {
            "type": "string"
          }
        }
      },
      "BookingStatus": {
        "type": "object",
        "properties": {
          "bookingStatusResponse": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingStatusDTO"
            }
          }
        }
      },
      "BookingStatusDTO": {
        "type": "object",
        "properties": {
          "bookingMessage": {
            "type": "string"
          }
        }
      },
      "MainResponseDTOBookingStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/BookingStatus"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "DeleteBookingDTO": {
        "type": "object",
        "properties": {
          "preRegistrationId": {
            "type": "string"
          },
          "deletedBy": {
            "type": "string"
          },
          "deletedDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MainResponseDTODeleteBookingDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/DeleteBookingDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "BookingRequestDTO": {
        "type": "object",
        "properties": {
          "registration_center_id": {
            "type": "string"
          },
          "appointment_date": {
            "type": "string"
          },
          "time_slot_from": {
            "type": "string"
          },
          "time_slot_to": {
            "type": "string"
          }
        }
      },
      "MainRequestDTOBookingRequestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "request": {
            "$ref": "#/components/schemas/BookingRequestDTO"
          }
        }
      },
      "MainResponseDTOBookingStatusDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/BookingStatusDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "MainResponseDTOBookingRegistrationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/BookingRegistrationDTO"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "AvailabilityDto": {
        "type": "object",
        "properties": {
          "regCenterId": {
            "type": "string"
          },
          "centerDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateTimeDto"
            }
          }
        }
      },
      "DateTimeDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "timeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SlotDto"
            }
          },
          "holiday": {
            "type": "boolean"
          }
        }
      },
      "MainResponseDTOAvailabilityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/AvailabilityDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionJSONInfoDTO"
            }
          }
        }
      },
      "SlotDto": {
        "type": "object",
        "properties": {
          "fromTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "toTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "availability": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}
